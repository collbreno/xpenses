name: Publish Android and merge to main

on:
  push:
    tags:
      - 'v*'
 
jobs:
  # Merge to the branch responsible for deploying iOS app using Xcode Cloud
  merge_to_main_branch:
    runs-on: ubuntu-22.04
    permissions:
      contents: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Merge to main branch
        uses: devmasx/merge-branch@master
        with:
          type: now
          target_branch: main
          github_token: ${{ secrets.GITHUB_TOKEN }}
  # Build and publish Android app to Play Store
  publish_android:
    runs-on: ubuntu-22.04
    permissions:
      contents: write
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - uses: actions/setup-java@v4 
        with:
          distribution: 'oracle'
          java-version: '17'
      - name: Install Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: 3.22.2
          channel: stable                
          cache: true    
      - name: Setup build tool version variable
        shell: bash
        run: |
          BUILD_TOOLS_VERSION=$(ls /usr/local/lib/android/sdk/build-tools/ | tail -n 1)
          echo "BUILD_TOOLS_VERSION=$BUILD_TOOLS_VERSION" >> $GITHUB_ENV
          echo Last build tool version is: $BUILD_TOOLS_VERSION
      - name: Get dependencies
        run: flutter pub get    
      - name: Run build_runner
        run: dart run build_runner build    
      - name: Build release app apk
        run: flutter build apk --release
      - name: Sign App APK
        uses: r0adkll/sign-android-release@v1   
        id: sign_app
        with:
          releaseDirectory: build/app/outputs/apk/release/
          signingKeyBase64: ${{ secrets.ANDROID_KEYSTORE_FILE_BASE64 }}
          alias: ${{ secrets.ANDROID_KEY_ALIAS }}
          keyStorePassword: ${{ secrets.ANDROID_KEYSTORE_PASSWORD }}
          keyPassword: ${{ secrets.ANDROID_KEY_PASSWORD }}
        env:
          BUILD_TOOLS_VERSION: ${{ env.BUILD_TOOLS_VERSION }}          
      - name: Deploy APK to GitHub Pages
        run: |
          mkdir -p public/downloads
          cp ${{steps.sign_app.outputs.signedReleaseFile}} public/downloads/
      - name: Publish to GitHub Pages
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}